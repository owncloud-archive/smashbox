#!/usr/bin/env bash
set -e

declare -x SMASHBOX_ACCOUNT_PASSWORD
declare -x SMASHBOX_ROOT
declare -x SMASHBOX_URL
declare -x SMASHBOX_USERNAME
declare -x SMASHBOX_PASSWORD
declare -x SMASHBOX_TIMEOUT
declare -x SMASHBOX_WAIT
declare -x SMASHBOX_CHECK_URL
declare -x SMASHBOX_CHECK_STATUS
declare -x SMASHBOX_SSL_ENABLED
declare -x SMASHBOX_CLIENT_VERSION

TEST_FOLDER=/smashbox/lib/jenkins

[[ -z "${SMASHBOX_TIMEOUT}" ]] && SMASHBOX_TIMEOUT="3600"
[[ -z "${SMASHBOX_WAIT}" ]] && SMASHBOX_WAIT="false"
[[ -z "${SMASHBOX_CHECK_URL}" ]] && SMASHBOX_CHECK_URL="${SMASHBOX_URL}"
[[ -z "${SMASHBOX_CHECK_STATUS}" ]] && SMASHBOX_CHECK_STATUS="200"
[[ -z "${SMASHBOX_SSL_ENABLED}" ]] && SMASHBOX_SSL_ENABLED="false"
[[ -z "${SMASHBOX_CLIENT_VERSION}" ]] && SMASHBOX_CLIENT_VERSION="master"

if [[ ${SMASHBOX_WAIT} == "true" || ${SMASHBOX_WAIT} == "1" ]]
then
  echo -n "Trying to access http://${SMASHBOX_CHECK_URL} for ${SMASHBOX_TIMEOUT} seconds"
  STARTED=$(date +%s)

  while [ $(( $(date +%s) - ${SMASHBOX_TIMEOUT} )) -lt $STARTED ]
  do
      if [[ $(curl --write-out %{http_code} --silent --output /dev/null http://${SMASHBOX_CHECK_URL}) == "${SMASHBOX_CHECK_STATUS}" ]]
      then
          break
      else
          echo -n "."
          sleep 1
      fi
  done

  if [ $(( $(date +%s) - ${SMASHBOX_TIMEOUT} )) -ge $STARTED ]
  then
      echo "failed!"
      exit 1
  fi

  echo "done!"
fi

# Define test set
TEST_ARRAY=( \
    reshareDir \
    scrapeLogFile \
    shareDir \
    shareFile \
    shareGroup \
    sharePermissions \
    uploadFiles \
    basicSync \
    concurrentDirRemove \
    shareLink \
    shareMountInit \
    sharePropagationGroups \
    sharePropagationInsideGroups \
    chunking \
    nplusone \
)

# Prepare test folder for tests to be executed
mkdir ${TEST_FOLDER}

# Copy tests to TEST_FOLDER and execute all tests in that directory
for SMASHBOX_TEST_NAME in "${TEST_ARRAY[@]}"
do
    if [[ -n ${SMASHBOX_TEST_NAME} ]]
    then
      if [[ ${SMASHBOX_TEST_NAME} == *"@"* ]]; then
        SMASHBOX_TEST_NAME="$(cut -d '@' -f 1 <<< "${SMASHBOX_TEST_NAME}")"
      fi

      FILES=(
        lib/test_${SMASHBOX_TEST_NAME}.py
        lib/oc-tests/test_${SMASHBOX_TEST_NAME}.py
        lib/owncloud/test_${SMASHBOX_TEST_NAME}.py
      )

      for FILE in ${FILES[@]}
      do
        if [[ -f /smashbox/${FILE} ]]
        then
          SMASHBOX_TEST_NAME=${FILE}
        fi
      done
    fi
    cp ${SMASHBOX_TEST_NAME} ${TEST_FOLDER}/
done

# Install prerequisites for execution of smash
git clone https://github.com/owncloud/client.git /tmp/client && \
cd /tmp/client && \
git checkout ${SMASHBOX_CLIENT_VERSION} && \
cmake -DCMAKE_BUILD_TYPE="Debug" -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_SYSCONFDIR=/etc/owncloud-client && \
make all install && \
cd && \
rm -rf /tmp/client && \
apk del build-base cmake && \
rm -rf /var/cache/apk/* /tmp/* && \
cd /smashbox

# Execute smash
exec /smashbox/bin/smash --debug -a ${TEST_FOLDER} $*
